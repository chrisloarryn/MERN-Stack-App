{"version":3,"sources":["shared/context/auth-context.js","shared/components/UIElements/LoadingSpinner.js","shared/components/UIElements/Backdrop.js","shared/hooks/auth-hook.js","shared/components/Navigation/MainHeader.js","shared/components/Navigation/NavLinks.js","shared/components/Navigation/SideDrawer.js","shared/components/Navigation/MainNavigation.js","App.js","index.js"],"names":["AuthContext","createContext","isLoggedIn","userId","token","login","logout","LoadingSpinner","props","className","asOverlay","Backdrop","ReactDOM","createPortal","onClick","document","getElementById","logoutTimer","MainHeader","children","NavLinks","auth","useContext","to","exact","SideDrawer","content","CSSTransition","in","show","timeout","classNames","mountOnEnter","unmountOnExit","MainNavigation","useState","drawerIsOpen","setDrawerIsOpen","closeDrawerHandler","Fragment","Users","React","lazy","NewPlace","UserPlaces","UpdatePlace","Auth","App","routes","setToken","tokenExpirationDate","setTokenExpirationDate","setUserId","useCallback","expiration","Date","getTime","localStorage","setItem","JSON","stringify","toISOString","removeItem","useEffect","remainingTime","setTimeout","clearTimeout","storedData","parse","getItem","useAuth","path","Provider","value","fallback","render"],"mappings":"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","file":"static/js/main.147915b8.chunk.js","sourcesContent":["import { createContext } from 'react';\n\nexport const AuthContext = createContext({\n  isLoggedIn: false,\n  userId: null,\n  token: null,\n  login: () => {},\n  logout: () => {}\n});\n","import React from 'react';\n\nimport './LoadingSpinner.css';\n\nconst LoadingSpinner = props => {\n  return (\n    <div className={`${props.asOverlay && 'loading-spinner__overlay'}`}>\n      <div className=\"lds-dual-ring\"></div>\n    </div>\n  );\n};\n\nexport default LoadingSpinner;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport './Backdrop.css';\n\nconst Backdrop = props => {\n  return ReactDOM.createPortal(\n    <div className=\"backdrop\" onClick={props.onClick}></div>,\n    document.getElementById('backdrop-hook')\n  );\n};\n\nexport default Backdrop;\n","import { useState, useCallback, useEffect } from 'react'\r\n\r\nlet logoutTimer\r\n\r\nexport const useAuth = () => {\r\n  const [token, setToken] = useState(false)\r\n  const [tokenExpirationDate, setTokenExpirationDate] = useState()\r\n  const [userId, setUserId] = useState(false)\r\n\r\n  const login = useCallback(({ userId, token, expiration }) => {\r\n    setToken(token)\r\n    setUserId(userId)\r\n    const tokenExpirationDate =\r\n    expiration || new Date(new Date().getTime() + 1000 * 60 * 60)\r\n    setTokenExpirationDate(tokenExpirationDate)\r\n    localStorage.setItem(\r\n      'userData',\r\n      JSON.stringify({\r\n        userId,\r\n        token,\r\n        expiration: tokenExpirationDate.toISOString()\r\n      }))\r\n  }, [])\r\n\r\n  const logout = useCallback(() => {\r\n    setToken(null)\r\n    setTokenExpirationDate(null)\r\n    setUserId(null)\r\n    localStorage.removeItem('userData')\r\n  }, [])\r\n\r\n  useEffect(() => {\r\n    if (token && tokenExpirationDate) {\r\n      const remainingTime = tokenExpirationDate.getTime() - new Date().getTime()\r\n      logoutTimer = setTimeout(logout, remainingTime)\r\n    } else {\r\n      clearTimeout(logoutTimer)\r\n    }\r\n  }, [token, logout, tokenExpirationDate])\r\n\r\n  useEffect(() => {\r\n    const storedData = JSON.parse(localStorage.getItem('userData'))\r\n    if (\r\n      storedData &&\r\n      storedData.token &&\r\n      new Date(storedData.expiration) > new Date()\r\n    ) {\r\n      login({\r\n        userId: storedData.userId,\r\n        token: storedData.token,\r\n        expiration: new Date(storedData.expiration)\r\n      })\r\n    }\r\n  }, [login])\r\n\r\n  return {token, login, logout, userId}\r\n}\r\n","import React from 'react';\n\nimport './MainHeader.css';\n\nconst MainHeader = props => {\n  return <header className=\"main-header\">{props.children}</header>;\n};\n\nexport default MainHeader;\n","import React, { useContext } from 'react';\nimport { NavLink } from 'react-router-dom';\n\nimport { AuthContext } from '../../context/auth-context';\nimport './NavLinks.css';\n\nconst NavLinks = props => {\n  const auth = useContext(AuthContext);\n\n  return (\n    <ul className=\"nav-links\">\n      <li>\n        <NavLink to=\"/\" exact>\n          ALL USERS\n        </NavLink>\n      </li>\n      {auth.isLoggedIn && (\n        <li>\n          <NavLink to={`/${auth.userId}/places`}>MY PLACES</NavLink>\n        </li>\n      )}\n      {auth.isLoggedIn && (\n        <li>\n          <NavLink to=\"/places/new\">ADD PLACE</NavLink>\n        </li>\n      )}\n      {!auth.isLoggedIn && (\n        <li>\n          <NavLink to=\"/auth\">AUTHENTICATE</NavLink>\n        </li>\n      )}\n      {auth.isLoggedIn && (\n        <li>\n          <button onClick={auth.logout}>LOGOUT</button>\n        </li>\n      )}\n    </ul>\n  );\n};\n\nexport default NavLinks;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { CSSTransition } from 'react-transition-group';\n\nimport './SideDrawer.css';\n\nconst SideDrawer = props => {\n  const content = (\n    <CSSTransition\n      in={props.show}\n      timeout={200}\n      classNames=\"slide-in-left\"\n      mountOnEnter\n      unmountOnExit\n    >\n      <aside className=\"side-drawer\" onClick={props.onClick}>{props.children}</aside>\n    </CSSTransition>\n  );\n\n  return ReactDOM.createPortal(content, document.getElementById('drawer-hook'));\n};\n\nexport default SideDrawer;\n","import React, { useState } from 'react';\nimport { Link } from 'react-router-dom';\n\nimport MainHeader from './MainHeader';\nimport NavLinks from './NavLinks';\nimport SideDrawer from './SideDrawer';\nimport Backdrop from '../UIElements/Backdrop';\nimport './MainNavigation.css';\n\nconst MainNavigation = props => {\n  const [drawerIsOpen, setDrawerIsOpen] = useState(false);\n\n  const openDrawerHandler = () => {\n    setDrawerIsOpen(true);\n  };\n\n  const closeDrawerHandler = () => {\n    setDrawerIsOpen(false);\n  };\n\n  return (\n    <React.Fragment>\n      {drawerIsOpen && <Backdrop onClick={closeDrawerHandler} />}\n      <SideDrawer show={drawerIsOpen} onClick={closeDrawerHandler}>\n        <nav className=\"main-navigation__drawer-nav\">\n          <NavLinks />\n        </nav>\n      </SideDrawer>\n\n      <MainHeader>\n        <button\n          className=\"main-navigation__menu-btn\"\n          onClick={openDrawerHandler}\n        >\n          <span />\n          <span />\n          <span />\n        </button>\n        <h1 className=\"main-navigation__title\">\n          <Link to=\"/\">YourPlaces</Link>\n        </h1>\n        <nav className=\"main-navigation__header-nav\">\n          <NavLinks />\n        </nav>\n      </MainHeader>\n    </React.Fragment>\n  );\n};\n\nexport default MainNavigation;\n","import React, { Suspense } from 'react';\nimport { BrowserRouter as Router, Route, Redirect, Switch } from 'react-router-dom';\n\n// import Users from './user/pages/Users'\n// import NewPlace from './places/pages/NewPlace'\n// import UserPlaces from './places/pages/UserPlaces'\n// import UpdatePlace from './places/pages/UpdatePlace'\n// import Auth from './user/pages/Auth'\nimport MainNavigation from './shared/components/Navigation/MainNavigation';\nimport { AuthContext } from './shared/context/auth-context';\nimport { useAuth } from './shared/hooks/auth-hook';\nimport LoadingSpinner from './shared/components/UIElements/LoadingSpinner';\n\nconst Users = React.lazy(() => import('./user/pages/Users'));\nconst NewPlace = React.lazy(() => import('./places/pages/NewPlace'));\nconst UserPlaces = React.lazy(() => import('./places/pages/UserPlaces'));\nconst UpdatePlace = React.lazy(() => import('./places/pages/UpdatePlace'));\nconst Auth = React.lazy(() => import('./user/pages/Auth'));\n\nconst App = () => {\n\tconst { token, login, logout, userId } = useAuth();\n\tlet routes;\n\n\tif (token) {\n\t\troutes = (\n\t\t\t<Switch>\n\t\t\t\t<Route path=\"/\" exact>\n\t\t\t\t\t<Users />\n\t\t\t\t</Route>\n\t\t\t\t<Route path=\"/:userId/places\" exact>\n\t\t\t\t\t<UserPlaces />\n\t\t\t\t</Route>\n\t\t\t\t<Route path=\"/places/new\" exact>\n\t\t\t\t\t<NewPlace />\n\t\t\t\t</Route>\n\t\t\t\t<Route path=\"/places/:placeId\">\n\t\t\t\t\t<UpdatePlace />\n\t\t\t\t</Route>\n\t\t\t\t<Redirect to=\"/\" />\n\t\t\t</Switch>\n\t\t);\n\t} else {\n\t\troutes = (\n\t\t\t<Switch>\n\t\t\t\t<Route path=\"/\" exact>\n\t\t\t\t\t<Users />\n\t\t\t\t</Route>\n\t\t\t\t<Route path=\"/:userId/places\" exact>\n\t\t\t\t\t<UserPlaces />\n\t\t\t\t</Route>\n\t\t\t\t<Route path=\"/auth\">\n\t\t\t\t\t<Auth />\n\t\t\t\t</Route>\n\t\t\t\t<Redirect to=\"/auth\" />\n\t\t\t</Switch>\n\t\t);\n\t}\n\n\treturn (\n\t\t<AuthContext.Provider\n\t\t\tvalue={{ isLoggedIn: !!token, token: token, userId: userId, login: login, logout: logout }}\n\t\t>\n\t\t\t<Router>\n\t\t\t\t<MainNavigation />\n\t\t\t\t<main>\n\t\t\t\t\t<Suspense\n\t\t\t\t\t\tfallback={\n\t\t\t\t\t\t\t<div className=\"center\">\n\t\t\t\t\t\t\t\t<LoadingSpinner />\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t}\n\t\t\t\t\t>\n\t\t\t\t\t\t{routes}\n\t\t\t\t\t</Suspense>\n\t\t\t\t</main>\n\t\t\t</Router>\n\t\t</AuthContext.Provider>\n\t);\n};\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}